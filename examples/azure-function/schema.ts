/*
 * This file was generated by a tool.
 * Rerun sql-ts to regenerate this file.
 */

export interface AddressEntity {
  AddressID?: number;
  AddressLine1: string;
  AddressLine2: string | null;
  City: string;
  StateProvince: string;
  CountryRegion: string;
  PostalCode: string;
  rowguid?: string;
  ModifiedDate?: Date;
}

export class AddressClass {
  "AddressID"?: number;
  "AddressLine1": string;
  "AddressLine2": string | null;
  "City": string;
  "StateProvince": string;
  "CountryRegion": string;
  "PostalCode": string;
  "rowguid"?: string;
  "ModifiedDate"?: Date;

  constructor(val: AddressEntity) {
    Object.assign(this, val);
  }
}
export interface CustomerEntity {
  CustomerID?: number;
  NameStyle?: boolean;
  Title: string | null;
  FirstName: string;
  MiddleName: string | null;
  LastName: string;
  Suffix: string | null;
  CompanyName: string | null;
  SalesPerson: string | null;
  EmailAddress: string | null;
  Phone: string | null;
  PasswordHash: string;
  PasswordSalt: string;
  rowguid?: string;
  ModifiedDate?: Date;
}

export class CustomerClass {
  "CustomerID"?: number;
  "NameStyle"?: boolean;
  "Title": string | null;
  "FirstName": string;
  "MiddleName": string | null;
  "LastName": string;
  "Suffix": string | null;
  "CompanyName": string | null;
  "SalesPerson": string | null;
  "EmailAddress": string | null;
  "Phone": string | null;
  "PasswordHash": string;
  "PasswordSalt": string;
  "rowguid"?: string;
  "ModifiedDate"?: Date;

  constructor(val: CustomerEntity) {
    Object.assign(this, val);
  }
}
export interface CustomerAddressEntity {
  CustomerID: number;
  AddressID: number;
  AddressType: string;
  rowguid?: string;
  ModifiedDate?: Date;
}

export class CustomerAddressClass {
  "CustomerID": number;
  "AddressID": number;
  "AddressType": string;
  "rowguid"?: string;
  "ModifiedDate"?: Date;

  constructor(val: CustomerAddressEntity) {
    Object.assign(this, val);
  }
}
export interface ProductEntity {
  ProductID?: number;
  Name: string;
  ProductNumber: string;
  Color: string | null;
  StandardCost: number;
  ListPrice: number;
  Size: string | null;
  Weight: number | null;
  ProductCategoryID: number | null;
  ProductModelID: number | null;
  SellStartDate: Date;
  SellEndDate: Date | null;
  DiscontinuedDate: Date | null;
  ThumbNailPhoto: string | null;
  ThumbnailPhotoFileName: string | null;
  rowguid?: string;
  ModifiedDate?: Date;
}

export class ProductClass {
  "ProductID"?: number;
  "Name": string;
  "ProductNumber": string;
  "Color": string | null;
  "StandardCost": number;
  "ListPrice": number;
  "Size": string | null;
  "Weight": number | null;
  "ProductCategoryID": number | null;
  "ProductModelID": number | null;
  "SellStartDate": Date;
  "SellEndDate": Date | null;
  "DiscontinuedDate": Date | null;
  "ThumbNailPhoto": string | null;
  "ThumbnailPhotoFileName": string | null;
  "rowguid"?: string;
  "ModifiedDate"?: Date;

  constructor(val: ProductEntity) {
    Object.assign(this, val);
  }
}
export interface ProductCategoryEntity {
  ProductCategoryID?: number;
  ParentProductCategoryID: number | null;
  Name: string;
  rowguid?: string;
  ModifiedDate?: Date;
}

export class ProductCategoryClass {
  "ProductCategoryID"?: number;
  "ParentProductCategoryID": number | null;
  "Name": string;
  "rowguid"?: string;
  "ModifiedDate"?: Date;

  constructor(val: ProductCategoryEntity) {
    Object.assign(this, val);
  }
}
export interface ProductDescriptionEntity {
  ProductDescriptionID?: number;
  Description: string;
  rowguid?: string;
  ModifiedDate?: Date;
}

export class ProductDescriptionClass {
  "ProductDescriptionID"?: number;
  "Description": string;
  "rowguid"?: string;
  "ModifiedDate"?: Date;

  constructor(val: ProductDescriptionEntity) {
    Object.assign(this, val);
  }
}
export interface ProductModelEntity {
  ProductModelID?: number;
  Name: string;
  CatalogDescription: string | null;
  rowguid?: string;
  ModifiedDate?: Date;
}

export class ProductModelClass {
  "ProductModelID"?: number;
  "Name": string;
  "CatalogDescription": string | null;
  "rowguid"?: string;
  "ModifiedDate"?: Date;

  constructor(val: ProductModelEntity) {
    Object.assign(this, val);
  }
}
export interface ProductModelProductDescriptionEntity {
  ProductModelID: number;
  ProductDescriptionID: number;
  Culture: string;
  rowguid?: string;
  ModifiedDate?: Date;
}

export class ProductModelProductDescriptionClass {
  "ProductModelID": number;
  "ProductDescriptionID": number;
  "Culture": string;
  "rowguid"?: string;
  "ModifiedDate"?: Date;

  constructor(val: ProductModelProductDescriptionEntity) {
    Object.assign(this, val);
  }
}
export interface SalesOrderDetailEntity {
  SalesOrderID: number;
  SalesOrderDetailID?: number;
  OrderQty: number;
  ProductID: number;
  UnitPrice: number;
  UnitPriceDiscount?: number;
  LineTotal: number;
  rowguid?: string;
  ModifiedDate?: Date;
}

export class SalesOrderDetailClass {
  "SalesOrderID": number;
  "SalesOrderDetailID"?: number;
  "OrderQty": number;
  "ProductID": number;
  "UnitPrice": number;
  "UnitPriceDiscount"?: number;
  "LineTotal": number;
  "rowguid"?: string;
  "ModifiedDate"?: Date;

  constructor(val: SalesOrderDetailEntity) {
    Object.assign(this, val);
  }
}
export interface SalesOrderHeaderEntity {
  SalesOrderID?: number;
  RevisionNumber?: number;
  OrderDate?: Date;
  DueDate: Date;
  ShipDate: Date | null;
  Status?: number;
  OnlineOrderFlag?: boolean;
  SalesOrderNumber: string;
  PurchaseOrderNumber: string | null;
  AccountNumber: string | null;
  CustomerID: number;
  ShipToAddressID: number | null;
  BillToAddressID: number | null;
  ShipMethod: string;
  CreditCardApprovalCode: string | null;
  SubTotal?: number;
  TaxAmt?: number;
  Freight?: number;
  TotalDue: number;
  Comment: string | null;
  rowguid?: string;
  ModifiedDate?: Date;
}

export class SalesOrderHeaderClass {
  "SalesOrderID"?: number;
  "RevisionNumber"?: number;
  "OrderDate"?: Date;
  "DueDate": Date;
  "ShipDate": Date | null;
  "Status"?: number;
  "OnlineOrderFlag"?: boolean;
  "SalesOrderNumber": string;
  "PurchaseOrderNumber": string | null;
  "AccountNumber": string | null;
  "CustomerID": number;
  "ShipToAddressID": number | null;
  "BillToAddressID": number | null;
  "ShipMethod": string;
  "CreditCardApprovalCode": string | null;
  "SubTotal"?: number;
  "TaxAmt"?: number;
  "Freight"?: number;
  "TotalDue": number;
  "Comment": string | null;
  "rowguid"?: string;
  "ModifiedDate"?: Date;

  constructor(val: SalesOrderHeaderEntity) {
    Object.assign(this, val);
  }
}
export interface vGetAllCategoriesEntity {
  ParentProductCategoryName: string;
  ProductCategoryName: string | null;
  ProductCategoryID: number | null;
}

export class vGetAllCategoriesClass {
  "ParentProductCategoryName": string;
  "ProductCategoryName": string | null;
  "ProductCategoryID": number | null;

  constructor(val: vGetAllCategoriesEntity) {
    Object.assign(this, val);
  }
}
export interface vProductAndDescriptionEntity {
  ProductID: number;
  Name: string;
  ProductModel: string;
  Culture: string;
  Description: string;
}

export class vProductAndDescriptionClass {
  "ProductID": number;
  "Name": string;
  "ProductModel": string;
  "Culture": string;
  "Description": string;

  constructor(val: vProductAndDescriptionEntity) {
    Object.assign(this, val);
  }
}
export interface vProductModelCatalogDescriptionEntity {
  ProductModelID?: number;
  Name: string;
  Summary: string | null;
  Manufacturer: string | null;
  Copyright: string | null;
  ProductURL: string | null;
  WarrantyPeriod: string | null;
  WarrantyDescription: string | null;
  NoOfYears: string | null;
  MaintenanceDescription: string | null;
  Wheel: string | null;
  Saddle: string | null;
  Pedal: string | null;
  BikeFrame: string | null;
  Crankset: string | null;
  PictureAngle: string | null;
  PictureSize: string | null;
  ProductPhotoID: string | null;
  Material: string | null;
  Color: string | null;
  ProductLine: string | null;
  Style: string | null;
  RiderExperience: string | null;
  rowguid: string;
  ModifiedDate: Date;
}

export class vProductModelCatalogDescriptionClass {
  "ProductModelID"?: number;
  "Name": string;
  "Summary": string | null;
  "Manufacturer": string | null;
  "Copyright": string | null;
  "ProductURL": string | null;
  "WarrantyPeriod": string | null;
  "WarrantyDescription": string | null;
  "NoOfYears": string | null;
  "MaintenanceDescription": string | null;
  "Wheel": string | null;
  "Saddle": string | null;
  "Pedal": string | null;
  "BikeFrame": string | null;
  "Crankset": string | null;
  "PictureAngle": string | null;
  "PictureSize": string | null;
  "ProductPhotoID": string | null;
  "Material": string | null;
  "Color": string | null;
  "ProductLine": string | null;
  "Style": string | null;
  "RiderExperience": string | null;
  "rowguid": string;
  "ModifiedDate": Date;

  constructor(val: vProductModelCatalogDescriptionEntity) {
    Object.assign(this, val);
  }
}
